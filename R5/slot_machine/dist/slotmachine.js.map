{"version":3,"file":"slotmachine.js","mappings":"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","sources":["webpack://SlotMachine/webpack/universalModuleDefinition","webpack://SlotMachine/webpack/bootstrap","webpack://SlotMachine/webpack/runtime/define property getters","webpack://SlotMachine/webpack/runtime/hasOwnProperty shorthand","webpack://SlotMachine/./lib/raf.ts","webpack://SlotMachine/./lib/dom.ts","webpack://SlotMachine/./lib/constants.ts","webpack://SlotMachine/./lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SlotMachine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlotMachine\"] = factory();\n\telse\n\t\troot[\"SlotMachine\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { Callback } from './types';\n\nexport default function raf(cb: Callback, timeout = 0) {\n  setTimeout(() => requestAnimationFrame(cb), timeout);\n}\n","export class Container {\n  element: HTMLElement;\n  tiles: Tile[] = [];\n  tileNodes: Tile[] = [];\n\n  constructor(public container: HTMLElement) {\n    const tileElements = [].slice.call(this.container.children) as HTMLElement[];\n\n    this.container.style.overflow = 'hidden';\n    this.element = document.createElement('div');\n    this.element.classList.add('slot-machine__container');\n    this.element.style.transition = '1s ease-in-out';\n    this.container.appendChild(this.element);\n    this.tiles = [...tileElements].map((element) => new Tile(element));\n    this.tileNodes = [\n      this.tiles[this.tiles.length - 1].clone(),\n      ...this.tiles,\n      this.tiles[0].clone(),\n    ];\n    this.wrapTiles();\n  }\n\n  private wrapTiles() {\n    this.tileNodes.forEach((tile) => {\n      this.element.appendChild(tile.element);\n    });\n  }\n\n  private get lastTileOffset() {\n    return this.tiles[0].offset;\n  }\n\n  getTileOffset(index: number) {\n    let offset = 0;\n\n    for (let i = 0; i < index; i++) {\n      offset += this.tiles[i].offset;\n    }\n\n    return -this.lastTileOffset - offset;\n  }\n\n  get maxTopOffset() {\n    return -1 * (this.tiles.reduce((acc, { offset }) => acc + offset, 0) + this.lastTileOffset);\n  }\n}\n\nexport class Tile {\n  constructor(public element: HTMLElement) {\n    this.element.classList.add('slot-machine__tile');\n  }\n\n  clone() {\n    const element = this.element.cloneNode(true) as HTMLElement;\n\n    return new Tile(element);\n  }\n\n  get offset() {\n    return this.element.offsetHeight;\n  }\n}\n","import { Options } from './types';\n\nfunction randomInteger(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const DEFAULTS: Required<Options> = {\n  active: 0, // Active element [Number]\n  delay: 200, // Animation time [Number]\n  randomize: (_, max) => randomInteger(0, max), // Randomize function, must return a number with the selected position\n  direction: 'up', // Animation direction ['up'||'down']\n};\n\nexport enum CONTAINER_FX {\n  GRADIENT = 'slot-machine__container--gradient',\n}\n\nexport enum TILE_FX {\n  NO_TRANSITION = 'slot-machine__tile--no-transition',\n  FAST = 'slot-machine__tile--blur-fast',\n  NORMAL = 'slot-machine__tile--blur-medium',\n  SLOW = 'slot-machine__tile--blur-slow',\n  TURTLE = 'slot-machine__tile--blur-turtle',\n  STOP = 'slot-machine__tile--gradient',\n}\n","import raf from './raf';\nimport { Container } from './dom';\nimport type { Bounds, Options } from './types';\nimport { DEFAULTS, TILE_FX, CONTAINER_FX } from './constants';\n\nconst timeout = (delay: number) => new Promise((res) => setTimeout(res, delay));\n\nexport default class SlotMachine {\n  container: Container;\n  element: HTMLElement;\n  running = false;\n  stopping = false;\n  nextActive?: number;\n\n  private remainingSpins: number;\n  private options: Required<Options>;\n  private _active: number;\n  private _bounds: Bounds;\n  private _transition: string;\n\n  constructor(element: HTMLElement, options: Options) {\n    this.element = element;\n    // Setup DOM\n    this.container = new Container(this.element);\n    // Set plugin options\n    this.setOptions(options);\n    this.active = this.options.active;\n    this.setupBounds();\n    // Show active element\n    this._resetPosition();\n  }\n\n  setOptions(options: Options) {\n    this.options = { ...DEFAULTS, ...options };\n  }\n\n  private setupBounds() {\n    const initial = this.container.getTileOffset(this.active);\n    const first = this.container.getTileOffset(0);\n    const last = this.container.getTileOffset(this.container.tiles.length - 1);\n\n    this._bounds = {\n      up: {\n        initial,\n        from: last,\n        to: 0,\n        nextReset: 0,\n        prevReset: this.container.maxTopOffset,\n      },\n      down: {\n        initial,\n        from: first,\n        to: this.container.maxTopOffset,\n        nextReset: 0,\n        prevReset: this.container.maxTopOffset,\n      },\n    };\n  }\n\n  get bounds() {\n    return this._bounds[this.options.direction];\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  set active(index: number) {\n    if (index < 0 || index >= this.container.tiles.length || isNaN(index)) {\n      index = 0;\n    }\n\n    this._active = index;\n  }\n\n  private get transition() {\n    return this._transition;\n  }\n\n  private set transition(transition: string) {\n    this._transition = transition || 'ease-in-out';\n  }\n\n  get _prevIndex() {\n    const prevIndex = this.active - 1;\n\n    return prevIndex < 0 ? this.container.tiles.length - 1 : prevIndex;\n  }\n\n  get _nextIndex() {\n    const nextIndex = this.active + 1;\n\n    return nextIndex < this.container.tiles.length ? nextIndex : 0;\n  }\n\n  get prevIndex() {\n    return this.options.direction === 'up' ? this._nextIndex : this._prevIndex;\n  }\n\n  get nextIndex() {\n    return this.options.direction === 'up' ? this._prevIndex : this._nextIndex;\n  }\n\n  set _animationFX(effect: TILE_FX) {\n    const delay = this.options.delay / 4;\n\n    raf(() => {\n      this.container.tiles\n        .map(({ element }) => element)\n        .forEach((tile) => {\n          tile.classList.remove(TILE_FX.FAST, TILE_FX.NORMAL, TILE_FX.SLOW, TILE_FX.TURTLE);\n          if (effect !== TILE_FX.STOP) {\n            tile.classList.add(effect);\n          }\n        });\n\n      if (effect === TILE_FX.STOP) {\n        this.container.element.classList.remove(CONTAINER_FX.GRADIENT);\n      } else {\n        this.container.element.classList.add(CONTAINER_FX.GRADIENT);\n      }\n    }, delay);\n  }\n\n  _changeTransition(delay = this.options.delay, transition = this.transition) {\n    this.container.element.style.transition = `${delay / 1000}s ${transition}`;\n  }\n\n  _changeTransform(margin: number) {\n    this.container.element.style.transform = `matrix(1, 0, 0, 1, 0, ${margin})`;\n  }\n\n  _isGoingBackward() {\n    return !!(this.active === 0 && this.nextActive === this.container.tiles.length - 1);\n  }\n\n  _isGoingForward() {\n    return !!(this.active === this.container.tiles.length - 1 && this.nextActive === 0);\n  }\n\n  _resetPosition(margin?: number) {\n    this.container.element.classList.toggle(TILE_FX.NO_TRANSITION);\n    this._changeTransform(margin !== undefined ? margin : this.bounds.initial);\n    // Force reflow, flushing the CSS changes\n    this.container.element.offsetHeight;\n    this.container.element.classList.toggle(TILE_FX.NO_TRANSITION);\n  }\n\n  async next() {\n    this.nextActive = this.nextIndex;\n    this.running = true;\n    await this.stop(0);\n\n    return this.active;\n  }\n\n  async prev() {\n    this.nextActive = this.prevIndex;\n    this.running = true;\n    await this.stop(0);\n\n    return this.active;\n  }\n\n  _getDelayFromSpins(spins: number) {\n    let delay = this.options.delay;\n    this.transition = 'linear';\n\n    switch (spins) {\n      case 1:\n        delay /= 0.5;\n        this.transition = 'ease-out';\n        this._animationFX = TILE_FX.TURTLE;\n        break;\n      case 2:\n        delay /= 0.75;\n        this._animationFX = TILE_FX.SLOW;\n        break;\n      case 3:\n        delay /= 1;\n        this._animationFX = TILE_FX.NORMAL;\n        break;\n      case 4:\n        delay /= 1.25;\n        this._animationFX = TILE_FX.NORMAL;\n        break;\n      default:\n        delay /= 1.5;\n        this._animationFX = TILE_FX.FAST;\n    }\n\n    return delay;\n  }\n\n  shuffle(spins: number) {\n    if (this.running || this.stopping) {\n      return;\n    }\n\n    this.nextActive = this.options.randomize(this.active, this.container.tiles.length);\n    this.remainingSpins = spins;\n\n    return this._shuffle();\n  }\n\n  private async _shuffle() {\n    this.running = true;\n    // Perform animation\n    const delay = this._getDelayFromSpins(this.remainingSpins);\n    this._changeTransition(delay);\n    this._changeTransform(this.bounds.to);\n\n    await timeout(delay);\n\n    if (!this.stopping && this.running) {\n      this.remainingSpins--;\n\n      this._resetPosition(this.bounds.from);\n\n      if (this.remainingSpins > 1) {\n        // Repeat animation\n        await this._shuffle();\n      } else {\n        await this.stop(0);\n      }\n    }\n  }\n\n  async stop(spins = 0) {\n    if (!this.running || this.stopping) {\n      return this.nextActive;\n    }\n\n    if (this.running && !this.stopping && spins) {\n      this.remainingSpins = spins;\n      return;\n    }\n\n    this.running = true;\n    this.stopping = true;\n\n    // Check direction to prevent jumping\n    if (this._isGoingBackward()) {\n      this._resetPosition(this.bounds.prevReset);\n    } else if (this._isGoingForward()) {\n      this._resetPosition(this.bounds.nextReset);\n    }\n\n    // Update last choosen element index\n    this.active = this.nextActive as number;\n\n    // Perform animation\n    const delay = this._getDelayFromSpins(1);\n    this._changeTransition(delay);\n    this._animationFX = TILE_FX.STOP;\n    this._changeTransform(this.container.getTileOffset(this.active));\n\n    await timeout(delay);\n\n    this.stopping = false;\n    this.running = false;\n    this.nextActive = undefined;\n  }\n}\n"],"names":[],"sourceRoot":""}